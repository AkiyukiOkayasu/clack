name: Test

on: [ push, pull_request ]
env:
  CARGO_TERM_COLOR: always
jobs:
  test:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        toolchain: [ "1.72.0", stable, beta, nightly ]

    runs-on: ${{ matrix.os }}
    env:
      RUSTFLAGS: -D warnings

    steps:
      - if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install libasound2-dev
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
      - name: Build
        run: cargo build --all --all-features --verbose
      - name: Check Plugin-only Extensions
        run: cargo check -p clack-extensions -F "clack-extensions/all-extensions" -F "clack-extensions/clack-plugin" --no-default-features
      - name: Check Host-only Extensions
        run: cargo check -p clack-extensions -F "clack-extensions/all-extensions" -F "clack-extensions/clack-host" --no-default-features
      - name: Check Standalone Extensions
        run: cargo check -p clack-extensions -F "clack-extensions/all-extensions" --no-default-features
      - name: Check Host Without default features
        run: cargo check -p clack-host --no-default-features
      - name: Run tests
        run: cargo test --all --verbose

  clippy:
    runs-on: ubuntu-latest

    steps:
      - run: sudo apt-get install libasound2-dev
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Format
        run: cargo fmt --all -- --check
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all --all-features -- -D warnings
  clap-validator:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          path: 'clack'
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: "1.72.0"
          override: true
      - name: Build
        run: cd clack; cargo build --release -p clack-plugin-gain -p clack-plugin-polysynth --verbose
      - name: Download Clap-Validator
        uses: actions/checkout@v4
        with:
          repository: 'free-audio/clap-validator'
          ref: '0.3.2'
          path: 'clap-validator'
      - name: Validate
        run: cd clap-validator; cargo run --release -- validate ../clack/target/release/libclack_plugin_gain.so ../clack/target/release/libclack_plugin_polysynth.so

  miri:
    runs-on: ubuntu-latest
    env:
      MIRIFLAGS: "-Zmiri-tree-borrows -Zmiri-backtrace=full -Zmiri-ignore-leaks" # TODO: only ignore leaks for the specific tests that need it
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: miri
      - uses: actions-rs/cargo@v1
        with:
          command: miri
          args: setup
      - uses: actions-rs/cargo@v1
        with:
          command: miri
          args: test --all --all-features --verbose --exclude clack-host-cpal

  rustdoc:
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: -D warnings
    steps:
      - run: sudo apt-get install libasound2-dev
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --all-features --no-deps

  cargo-deny:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources
    # Prevent sudden announcement of a new advisory from failing ci:
    continue-on-error: ${{ matrix.checks == 'advisories' }}
    steps:
      - uses: actions/checkout@v4
      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          command: check ${{ matrix.checks }}
